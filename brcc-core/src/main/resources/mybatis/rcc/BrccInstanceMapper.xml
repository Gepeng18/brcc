<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baidu.brcc.dao.BrccInstanceMapper">
  <resultMap id="BaseResultMap" type="com.baidu.brcc.domain.BrccInstance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="idc" jdbcType="VARCHAR" property="idc" />
    <result column="container_id" jdbcType="VARCHAR" property="containerId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="client_version" jdbcType="VARCHAR" property="clientVersion" />
    <result column="enable_update_callback" jdbcType="TINYINT" property="enableUpdateCallback" />
    <result column="last_checksum" jdbcType="VARCHAR" property="lastChecksum" />
    <result column="last_checksum_time" jdbcType="TIMESTAMP" property="lastChecksumTime" />
    <result column="current_checksum" jdbcType="VARCHAR" property="currentChecksum" />
    <result column="current_checksum_time" jdbcType="TIMESTAMP" property="currentChecksumTime" />
    <result column="version_id" jdbcType="BIGINT" property="versionId" />
    <result column="net_cost" jdbcType="INTEGER" property="netCost" />
    <result column="heartbeat_time" jdbcType="TIMESTAMP" property="heartbeatTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="gray_flag" jdbcType="TINYINT" property="grayFlag" />
    <result column="gray_version_id" jdbcType="BIGINT" property="grayVersionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.type == 0">
                  <choose>
                    <when test="criterion.noValue">
                      AND ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      AND ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue">
                      AND ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </when>
                <when test="criterion.type == 1">
                  <trim prefix="(" prefixOverrides="OR" suffix=")">
                    <foreach collection="criterion.inlineOrCriteria" item="criterion">
                      <choose>
                        <when test="criterion.noValue">
                          OR ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                          OR ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                          OR ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                        </when>
                        <when test="criterion.listValue">
                          OR ${criterion.condition}
                          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                  </trim>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.type == 0">
                  <choose>
                    <when test="criterion.noValue">
                      AND ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      AND ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue">
                      AND ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </when>
                <when test="criterion.type == 1">
                  <trim prefix="(" prefixOverrides="OR" suffix=")">
                    <foreach collection="criterion.inlineOrCriteria" item="criterion">
                      <choose>
                        <when test="criterion.noValue">
                          OR ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                          OR ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                          OR ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                        </when>
                        <when test="criterion.listValue">
                          OR ${criterion.condition}
                          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                  </trim>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, idc, container_id, app_name, ip, client_version, enable_update_callback, last_checksum, 
    last_checksum_time, current_checksum, current_checksum_time, version_id, net_cost, 
    heartbeat_time, create_time, gray_flag, gray_version_id
  </sql>
  <select id="selectByExample" parameterType="com.baidu.brcc.domain.BrccInstanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <if test="columns!=null and columns.size() &gt; 0">
      <foreach collection="columns" item="listItem" separator=",">
        ${listItem}
      </foreach>
    </if>
    <if test="columns==null or columns.size() &lt;= 0">
      <include refid="Base_Column_List" />
    </if>
    from rcc_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test='orderByClause == "`id` desc"'>
      order by id desc
    </if>
    <if test="limit != null and limit > 0">
       limit 
      <if test="start != null and start > 0">
         #{start},
      </if>
       #{limit} 
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rcc_instance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from rcc_instance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.baidu.brcc.domain.BrccInstanceExample">
    delete from rcc_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.baidu.brcc.domain.BrccInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rcc_instance (idc, container_id, app_name, 
      ip, client_version, enable_update_callback, 
      last_checksum, last_checksum_time, current_checksum, 
      current_checksum_time, version_id, net_cost, 
      heartbeat_time, create_time, gray_flag, gray_version_id)
    values (#{idc,jdbcType=VARCHAR}, #{containerId,jdbcType=VARCHAR}, #{appName,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{clientVersion,jdbcType=VARCHAR}, #{enableUpdateCallback,jdbcType=TINYINT}, 
      #{lastChecksum,jdbcType=VARCHAR}, #{lastChecksumTime,jdbcType=TIMESTAMP}, #{currentChecksum,jdbcType=VARCHAR}, 
      #{currentChecksumTime,jdbcType=TIMESTAMP}, #{versionId,jdbcType=BIGINT}, #{netCost,jdbcType=INTEGER}, 
      #{heartbeatTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{grayFlag,jdbcType=TINYINT}, #{grayVersionId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.baidu.brcc.domain.BrccInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rcc_instance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idc != null">
        idc,
      </if>
      <if test="containerId != null">
        container_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="clientVersion != null">
        client_version,
      </if>
      <if test="enableUpdateCallback != null">
        enable_update_callback,
      </if>
      <if test="lastChecksum != null">
        last_checksum,
      </if>
      <if test="lastChecksumTime != null">
        last_checksum_time,
      </if>
      <if test="currentChecksum != null">
        current_checksum,
      </if>
      <if test="currentChecksumTime != null">
        current_checksum_time,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="netCost != null">
        net_cost,
      </if>
      <if test="heartbeatTime != null">
        heartbeat_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="grayFlag != null">
        gray_flag,
      </if>
      <if test="grayVersionId != null">
        gray_version_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idc != null">
        #{idc,jdbcType=VARCHAR},
      </if>
      <if test="containerId != null">
        #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="clientVersion != null">
        #{clientVersion,jdbcType=VARCHAR},
      </if>
      <if test="enableUpdateCallback != null">
        #{enableUpdateCallback,jdbcType=TINYINT},
      </if>
      <if test="lastChecksum != null">
        #{lastChecksum,jdbcType=VARCHAR},
      </if>
      <if test="lastChecksumTime != null">
        #{lastChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentChecksum != null">
        #{currentChecksum,jdbcType=VARCHAR},
      </if>
      <if test="currentChecksumTime != null">
        #{currentChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=BIGINT},
      </if>
      <if test="netCost != null">
        #{netCost,jdbcType=INTEGER},
      </if>
      <if test="heartbeatTime != null">
        #{heartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grayFlag != null">
        #{grayFlag,jdbcType=TINYINT},
      </if>
      <if test="grayVersionId != null">
        #{grayVersionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baidu.brcc.domain.BrccInstanceExample" resultType="java.lang.Long">
    select count(*) from rcc_instance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rcc_instance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.idc != null">
        idc = #{record.idc,jdbcType=VARCHAR},
      </if>
      <if test="record.containerId != null">
        container_id = #{record.containerId,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.clientVersion != null">
        client_version = #{record.clientVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.enableUpdateCallback != null">
        enable_update_callback = #{record.enableUpdateCallback,jdbcType=TINYINT},
      </if>
      <if test="record.lastChecksum != null">
        last_checksum = #{record.lastChecksum,jdbcType=VARCHAR},
      </if>
      <if test="record.lastChecksumTime != null">
        last_checksum_time = #{record.lastChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentChecksum != null">
        current_checksum = #{record.currentChecksum,jdbcType=VARCHAR},
      </if>
      <if test="record.currentChecksumTime != null">
        current_checksum_time = #{record.currentChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=BIGINT},
      </if>
      <if test="record.netCost != null">
        net_cost = #{record.netCost,jdbcType=INTEGER},
      </if>
      <if test="record.heartbeatTime != null">
        heartbeat_time = #{record.heartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grayFlag != null">
        gray_flag = #{record.grayFlag,jdbcType=TINYINT},
      </if>
      <if test="record.grayVersionId != null">
        gray_version_id = #{record.grayVersionId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rcc_instance
    set id = #{record.id,jdbcType=BIGINT},
      idc = #{record.idc,jdbcType=VARCHAR},
      container_id = #{record.containerId,jdbcType=VARCHAR},
      app_name = #{record.appName,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      client_version = #{record.clientVersion,jdbcType=VARCHAR},
      enable_update_callback = #{record.enableUpdateCallback,jdbcType=TINYINT},
      last_checksum = #{record.lastChecksum,jdbcType=VARCHAR},
      last_checksum_time = #{record.lastChecksumTime,jdbcType=TIMESTAMP},
      current_checksum = #{record.currentChecksum,jdbcType=VARCHAR},
      current_checksum_time = #{record.currentChecksumTime,jdbcType=TIMESTAMP},
      version_id = #{record.versionId,jdbcType=BIGINT},
      net_cost = #{record.netCost,jdbcType=INTEGER},
      heartbeat_time = #{record.heartbeatTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      gray_flag = #{record.grayFlag,jdbcType=TINYINT},
      gray_version_id = #{record.grayVersionId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baidu.brcc.domain.BrccInstance">
    update rcc_instance
    <set>
      <if test="idc != null">
        idc = #{idc,jdbcType=VARCHAR},
      </if>
      <if test="containerId != null">
        container_id = #{containerId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="clientVersion != null">
        client_version = #{clientVersion,jdbcType=VARCHAR},
      </if>
      <if test="enableUpdateCallback != null">
        enable_update_callback = #{enableUpdateCallback,jdbcType=TINYINT},
      </if>
      <if test="lastChecksum != null">
        last_checksum = #{lastChecksum,jdbcType=VARCHAR},
      </if>
      <if test="lastChecksumTime != null">
        last_checksum_time = #{lastChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentChecksum != null">
        current_checksum = #{currentChecksum,jdbcType=VARCHAR},
      </if>
      <if test="currentChecksumTime != null">
        current_checksum_time = #{currentChecksumTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=BIGINT},
      </if>
      <if test="netCost != null">
        net_cost = #{netCost,jdbcType=INTEGER},
      </if>
      <if test="heartbeatTime != null">
        heartbeat_time = #{heartbeatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grayFlag != null">
        gray_flag = #{grayFlag,jdbcType=TINYINT},
      </if>
      <if test="grayVersionId != null">
        gray_version_id = #{grayVersionId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baidu.brcc.domain.BrccInstance">
    update rcc_instance
    set idc = #{idc,jdbcType=VARCHAR},
      container_id = #{containerId,jdbcType=VARCHAR},
      app_name = #{appName,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      client_version = #{clientVersion,jdbcType=VARCHAR},
      enable_update_callback = #{enableUpdateCallback,jdbcType=TINYINT},
      last_checksum = #{lastChecksum,jdbcType=VARCHAR},
      last_checksum_time = #{lastChecksumTime,jdbcType=TIMESTAMP},
      current_checksum = #{currentChecksum,jdbcType=VARCHAR},
      current_checksum_time = #{currentChecksumTime,jdbcType=TIMESTAMP},
      version_id = #{versionId,jdbcType=BIGINT},
      net_cost = #{netCost,jdbcType=INTEGER},
      heartbeat_time = #{heartbeatTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      gray_flag = #{grayFlag,jdbcType=TINYINT},
      gray_version_id = #{grayVersionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>